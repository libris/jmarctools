apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

archivesBaseName = "marc"

group = 'se.kb.libris'
version = '1.3.3'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
}

allprojects {
  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
  }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
      java { srcDir 'src/main/java' }
    }
    
    test {
    }
}

task in_out (dependsOn: 'classes', type: JavaExec) {
    standardInput = System.in
    main = 'se.kb.libris.util.marc.io.InOut'
    classpath = sourceSets.main.runtimeClasspath
    Set a = [ '-inType=ISO2709', '-outType=ISO2709', '-inEncoding=UTF-8', '-outEncoding=UTF-8', '-trustLength=false', '-trustDirectory=false' ]

    args(a) 
}

task iso_to_text (dependsOn: 'classes', type: JavaExec) {
    standardInput = System.in
    main = 'se.kb.libris.util.marc.io.InOut'
    classpath = sourceSets.main.runtimeClasspath
    Set a = [ '-inType=ISO2709', '-outType=TEXT', '-inEncoding=UTF-8', '-outEncoding=UTF-8', '-trustLength=false', '-trustDirectory=false' ]

    args(a) 
}

// Fat JAR packaging
jar {
    manifest {
        attributes "Main-Class": "Main"
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : project.zipTree(it).matching {
                exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA','build','.gradle/**','build.gradle','gradle','gradlew','gradlew.bat','test'
            }
        }
    }
}
